name: setting up environment

on:
#  release:
#    types: [published]
#  push:
#    branches:
#      - main
#    paths:
#      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: [started]
    

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
       - name: Checkout
         uses: actions/checkout@main

       - name: initialization
         run: |
           sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
           docker rmi `docker images -q`
           sudo apt-get remove account-plugin-facebook account-plugin-flickr account-plugin-jabber account-plugin-salut account-plugin-twitter account-plugin-windows-live account-plugin-yahoo aisleriot brltty duplicity empathy empathy-common example-content gnome-accessibility-themes gnome-contacts gnome-mahjongg gnome-mines gnome-orca gnome-screensaver gnome-sudoku gnome-video-effects gnomine landscape-common libreoffice-avmedia-backend-gstreamer libreoffice-base-core libreoffice-calc libreoffice-common libreoffice-core libreoffice-draw libreoffice-gnome libreoffice-gtk libreoffice-impress libreoffice-math libreoffice-ogltrans libreoffice-pdfimport libreoffice-style-galaxy libreoffice-style-human libreoffice-writer libsane libsane-common mcp-account-manager-uoa python3-uno rhythmbox rhythmbox-plugins rhythmbox-plugin-zeitgeist sane-utils shotwell shotwell-common telepathy-gabble telepathy-haze telepathy-idle telepathy-indicator telepathy-logger telepathy-mission-control-5 telepathy-salut totem totem-common totem-plugins printer-driver-brlaser printer-driver-foo2zjs printer-driver-foo2zjs-common printer-driver-m2300w printer-driver-ptouch printer-driver-splix
           git config --global user.name "ElytrA8"
           git config --global user.email "manofuranium@gmail.com"         
           sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
           sudo -E apt-get clean 
           sudo apt install expect -y
       - name: cloning repo
         run: |
           expect -c " 
           spawn git clone ${{ secrets.REPOM }} source
           expect \"Username\"        
           send \"${{ secrets.GHUSER }}\r\"
           expect \"Password\"        
           send \"${{ secrets.GHPASS }}\r\"
           set timeout -1
           catch wait result
           interact"
       - name: compilation
         run: |
           ls
           cd source
           docker container prune --force
           docker build . -t mirror-bot
       - name: running Docker
         run: |
           docker run mirror-bot
